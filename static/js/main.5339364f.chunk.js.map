{"version":3,"sources":["Social/img/three-dots.svg","Social/components/Common/Preloader/Preloader.tsx","Social/API/profileAPI.ts","Social/redux/Reducers/ProfileReducer.ts","Social/API/usersAPI.ts","Social/components/Utils/Helper/ObjectHelper.ts","Social/redux/Reducers/UsersReducer.ts","Social/API/Api.ts","Social/redux/Reducers/DialogsReducer.ts","Social/redux/Reducers/AppReducer.ts","Social/redux/ReduxStore.ts","Social/components/Header/MyHeader.tsx","Social/components/Navbar/Navbar.tsx","Social/App.tsx","index.tsx","Social/redux/Selectors/Selectors.ts","Social/API/authAPI.ts","Social/API/securityAPI.ts","Social/redux/Reducers/AuthReducer.ts","Social/components/Header/MyHeader.module.css"],"names":["Preloader","src","preloader","alt","profileAPI","id","instance","get","then","status","data","console","log","put","image","formData","FormData","append","headers","initialState","postsData","message","name","age","profile","actions","addPost","postText","type","removePost","savePhotoSuccess","photo","setStatus","setUserProfile","getProfile","userId","dispatch","getStatus","updateStatus","resultCode","ResultCodesEnum","Success","savePhoto","file","photos","profileReducer","state","action","undefined","newPost","length","filter","p","usersAPI","currentPage","pageSize","term","friend","post","delete","updObjInArray","items","itemId","objPropName","propToChange","map","u","usersData","totalUsersCount","isFetching","followingProgress","acceptFollow","acceptUnfollow","setUsers","setCurrentPage","setFilter","payload","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsers","totalCount","_followUnfollowFlow","apiMethod","actionCreator","follow","unfollow","usersReducer","followed","ResultCodesEnumCaptcha","axios","create","baseURL","withCredentials","dialogsData","messagesData","sendMessage","diallogsReducer","initialized","appReducer","rootReducer","combineReducers","profilePage","dialogsPage","usersPage","UsersReducer","auth","authReducer","form","formReducer","app","store","createStore","composeWithDevTools","applyMiddleware","thunk","MyHeader","useSelector","getAuthState","isAuth","login","useDispatch","className","style","header","icon","UserOutlined","user","onClick","logOut","button","to","Navbar","mode","defaultSelectedKeys","defaultOpenKeys","height","Item","Header","Layout","Content","Sider","DialogsContainer","React","lazy","ProfileContainer","Users","Login","ChatPage","App","getAppsState","useEffect","promise","checkAuth","Promise","all","padding","width","minHeight","fallback","path","element","ghpages","publish","branch","repo","ReactDOM","render","document","getElementById","getUsersState","getProfileState","getDialogsState","authAPI","email","password","rememberMe","captcha","securityAPI","captchaURL","captchaUrl","logIn","messages","CapthaIsRequired","getCaptchaUrl","stopSubmit","_error","url","module","exports"],"mappings":"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","file":"static/js/main.5339364f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/three-dots.4837ff4e.svg\";","import { FC } from \"react\";\r\nimport preloader from \"../../../img/three-dots.svg\";\r\n\r\nconst Preloader: FC = () => {\r\n\treturn <img src={preloader} alt=\"preloader\" />;\r\n};\r\n\r\nexport default Preloader;\r\n","import { instance, ResponseType } from \"./Api\";\r\nimport { PhotosType, ProfileType } from \"./../types/types\";\r\ntype SavePhotoType = {\r\n\tphotos: PhotosType;\r\n};\r\nexport const profileAPI = {\r\n\tgetProfile(id: number) {\r\n\t\treturn instance.get<ProfileType>(`profile/${id}`).then(({ status, data }) => {\r\n\t\t\tconsole.log(status, \"Получение профиля\");\r\n\t\t\treturn data;\r\n\t\t});\r\n\t},\r\n\tgetStatus(id: number) {\r\n\t\treturn instance.get<string>(`/profile/status/${id}`).then(({ status, data }) => {\r\n\t\t\tconsole.log(status, \"Получение статуса\");\r\n\t\t\treturn data;\r\n\t\t});\r\n\t},\r\n\tupdateStatus(status: string) {\r\n\t\treturn instance\r\n\t\t\t.put<ResponseType>(`/profile/status`, {\r\n\t\t\t\tstatus,\r\n\t\t\t})\r\n\t\t\t.then(({ status, data }) => {\r\n\t\t\t\tconsole.log(status, \"Обновление статуса\");\r\n\t\t\t\treturn data;\r\n\t\t\t});\r\n\t},\r\n\tsavePhoto(image: File) {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append(\"image\", image);\r\n\t\treturn instance\r\n\t\t\t.put<ResponseType<SavePhotoType>>(`/profile/photo`, formData, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"multipart*form-data\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then(({status,data}) => {\r\n\t\t\t\tconsole.log(status, \"Фото отправлено\");\r\n\t\t\t\treturn data;\r\n\t\t\t});\r\n\t},\r\n};\r\n","import { ResultCodesEnum } from \"../../API/Api\";\r\nimport { profileAPI } from \"../../API/profileAPI\";\r\nimport { PhotosType, PostsType, ProfileType } from \"../../types/types\";\r\nimport { BaseThunkType, InferActionsTypes } from \"../ReduxStore\";\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>;\r\ntype ThunkType = BaseThunkType<ActionsType>;\r\nconst initialState = {\r\n\tpostsData: [\r\n\t\t{ id: 0, message: \"Hello\", name: \"Kira\", age: \"13\" },\r\n\t\t{ id: 1, message: \"How are you?\", name: \"Line\", age: 52 },\r\n\t\t{ id: 2, message: \"Are you fine?\", name: \"Lina\", age: 12 },\r\n\t\t{ id: 3, message: \"How old are you?\", name: \"Kostya\", age: 53 },\r\n\t\t{ id: 4, message: \"Glad to see you\", name: \"Dasha\", age: 36 },\r\n\t] as Array<PostsType>,\r\n\tprofile: null as ProfileType | null,\r\n\tstatus: \"\",\r\n};\r\n\r\nconst profileReducer = (\r\n\tstate: InitialStateType = initialState,\r\n\taction: ActionsType\r\n): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase \"ADD_POST\":\r\n\t\t\tif (action.postText === undefined) {\r\n\t\t\t\treturn state;\r\n\t\t\t}\r\n\t\t\tlet newPost = {\r\n\t\t\t\tid: state.postsData.length + 1,\r\n\t\t\t\tmessage: action.postText,\r\n\t\t\t\tname: \"Masha\",\r\n\t\t\t\tage: 20,\r\n\t\t\t};\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpostsData: [...state.postsData, newPost],\r\n\t\t\t};\r\n\t\tcase \"REMOVE_POST\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpostsData: state.postsData.filter((p) => p.id !== action.id),\r\n\t\t\t};\r\n\t\tcase \"SET_USER_PROFILE\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: action.profile,\r\n\t\t\t};\r\n\t\tcase \"SET_STATUS\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status,\r\n\t\t\t};\r\n\r\n\t\tcase \"SET_PHOTO_SUCCESS\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: { ...state.profile, photos: action.photo } as ProfileType,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\nexport const actions = {\r\n\taddPost: (postText: string) =>\r\n\t\t({\r\n\t\t\ttype: \"ADD_POST\",\r\n\t\t\tpostText: postText,\r\n\t\t} as const),\r\n\tremovePost: (id: number) =>\r\n\t\t({\r\n\t\t\ttype: \"REMOVE_POST\",\r\n\t\t\tid,\r\n\t\t} as const),\r\n\tsavePhotoSuccess: (photo: PhotosType) =>\r\n\t\t({\r\n\t\t\ttype: \"SET_PHOTO_SUCCESS\",\r\n\t\t\tphoto,\r\n\t\t} as const),\r\n\tsetStatus: (status: string) =>\r\n\t\t({\r\n\t\t\ttype: \"SET_STATUS\",\r\n\t\t\tstatus: status,\r\n\t\t} as const),\r\n\tsetUserProfile: (profile: ProfileType) =>\r\n\t\t({\r\n\t\t\ttype: \"SET_USER_PROFILE\",\r\n\t\t\tprofile,\r\n\t\t} as const),\r\n};\r\nexport const getProfile =\r\n\t(userId: number): ThunkType =>\r\n\t(dispatch) => {\r\n\t\tprofileAPI.getProfile(userId).then((data) => {\r\n\t\t\tdispatch(actions.setUserProfile(data));\r\n\t\t});\r\n\t};\r\nexport const getStatus =\r\n\t(id: number): ThunkType =>\r\n\t(dispatch) => {\r\n\t\tprofileAPI.getStatus(id).then((data) => {\r\n\t\t\tdispatch(actions.setStatus(data));\r\n\t\t});\r\n\t};\r\nexport const updateStatus =\r\n\t(status: string): ThunkType =>\r\n\t(dispatch) => {\r\n\t\tprofileAPI.updateStatus(status).then((data) => {\r\n\t\t\tif (data.resultCode === ResultCodesEnum.Success) {\r\n\t\t\t\tdispatch(actions.setStatus(status));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\nexport const savePhoto =\r\n\t(file: File): ThunkType =>\r\n\t(dispatch) => {\r\n\t\tprofileAPI.savePhoto(file).then((data) => {\r\n\t\t\tif (data.resultCode === ResultCodesEnum.Success) {\r\n\t\t\t\tdispatch(actions.savePhotoSuccess(data.data.photos));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\nexport default profileReducer;\r\n","import { FilterType } from \"../redux/Reducers/UsersReducer\";\r\nimport { GetItemsType, instance, ResponseType } from \"./Api\";\r\nexport const usersAPI = {\r\n  getUsers(currentPage: number, pageSize: number, { term, friend }: FilterType) {\r\n\r\n\t\treturn instance\r\n\t\t\t.get<GetItemsType>(\r\n\t\t\t\t`users?page=${currentPage}&count=${pageSize}` +\r\n\t\t\t\t\t(term ? `&term=${term}` : \"\") +\r\n\t\t\t\t\t(friend === null ? \"\" : `&friend=${friend}`)\r\n\t\t\t)\r\n\t\t\t.then(({ status, data }) => {\r\n\t\t\t\tconsole.log(status, \"Получение пользователей\");\r\n\t\t\t\treturn data;\r\n\t\t\t});\r\n\t},\r\n\tfollowUser(id: number) {\r\n\t\treturn instance.post<ResponseType>(`follow/${id}`).then(({ status, data }) => {\r\n\t\t\tconsole.log(status, \"follow\");\r\n\t\t\treturn data;\r\n\t\t});\r\n\t},\r\n\tunfollowUser(id: number) {\r\n\t\treturn instance.delete<ResponseType>(`follow/${id}`).then(({ status, data }) => {\r\n\t\t\tconsole.log(status, \"unfollow\");\r\n\t\t\treturn data;\r\n\t\t});\r\n\t},\r\n};\r\n","export const updObjInArray = (\r\n\titems: any,\r\n\titemId: number,\r\n\tobjPropName: string,\r\n\tpropToChange: any\r\n) => {\r\n\treturn items.map((u: any) => {\r\n\t\tif (u[objPropName] === itemId) {\r\n\t\t\treturn { ...u, ...propToChange };\r\n\t\t}\r\n\t\treturn u;\r\n\t});\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport { ResponseType, ResultCodesEnum } from \"../../API/Api\";\r\nimport { usersAPI } from \"../../API/usersAPI\";\r\nimport { updObjInArray } from \"../../components/Utils/Helper/ObjectHelper\";\r\nimport { UserType } from \"../../types/types\";\r\nimport { BaseThunkType, InferActionsTypes } from \"../ReduxStore\";\r\n\r\nconst initialState = {\r\n\tusersData: [] as Array<UserType>,\r\n\tpageSize: 5 as number,\r\n\ttotalUsersCount: 0 as number,\r\n\tcurrentPage: 1 as number,\r\n\tisFetching: true as boolean,\r\n\tfilter: {\r\n\t\tterm: \"\",\r\n\t\tfriend: null as null | boolean,\r\n\t},\r\n\tfollowingProgress: [] as Array<number>,\r\n};\r\nexport type InitialState = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>;\r\nexport type FilterType = typeof initialState.filter;\r\ntype ThunkType = BaseThunkType<ActionsType>;\r\nconst usersReducer = (state: InitialState = initialState, action: ActionsType): InitialState => {\r\n\tswitch (action.type) {\r\n\t\tcase \"FOLLOW\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusersData: updObjInArray(state.usersData, action.userId, \"id\", {\r\n\t\t\t\t\tfollowed: true,\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\t\tcase \"UNFOLLOW\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusersData: updObjInArray(state.usersData, action.userId, \"id\", {\r\n\t\t\t\t\tfollowed: false,\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\t\tcase \"SET_USERS\": {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusersData: [...action.usersData],\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"SET_CURRENT_PAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentPage: action.currentPage,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"SET_TOTAL_USERS_COUNT\": {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttotalUsersCount: action.totalUsersCount / 100,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"TOGGLE_IS_FETCHING\": {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: action.isFetching,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"TOGGLE_FOLLOWING_PROGRESS\": {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfollowingProgress: action.followingProgress\r\n\t\t\t\t\t? [...state.followingProgress, action.userId]\r\n\t\t\t\t\t: state.followingProgress.filter((id) => id !== action.userId),\r\n\t\t\t};\r\n\t\t}\r\n    case \"SET_FILTER\": {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfilter: {...action.payload},\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\nexport const actions = {\r\n\tacceptFollow: (userId: number) =>\r\n\t\t({\r\n\t\t\ttype: \"FOLLOW\",\r\n\t\t\tuserId,\r\n\t\t} as const),\r\n\tacceptUnfollow: (userId: number) =>\r\n\t\t({\r\n\t\t\ttype: \"UNFOLLOW\",\r\n\t\t\tuserId,\r\n\t\t} as const),\r\n\tsetUsers: (usersData: Array<UserType>) =>\r\n\t\t({\r\n\t\t\ttype: \"SET_USERS\",\r\n\t\t\tusersData,\r\n\t\t} as const),\r\n\tsetCurrentPage: (currentPage: number) =>\r\n\t\t({\r\n\t\t\ttype: \"SET_CURRENT_PAGE\",\r\n\t\t\tcurrentPage,\r\n\t\t} as const),\r\n\tsetFilter: (filter: FilterType) =>\r\n\t\t({\r\n\t\t\ttype: \"SET_FILTER\",\r\n\t\t\tpayload:  filter ,\r\n\t\t} as const),\r\n\tsetTotalUsersCount: (totalUsersCount: number) =>\r\n\t\t({\r\n\t\t\ttype: \"SET_TOTAL_USERS_COUNT\",\r\n\t\t\ttotalUsersCount,\r\n\t\t} as const),\r\n\ttoggleIsFetching: (isFetching: boolean) =>\r\n\t\t({\r\n\t\t\ttype: \"TOGGLE_IS_FETCHING\",\r\n\t\t\tisFetching,\r\n\t\t} as const),\r\n\ttoggleFollowingProgress: (followingProgress: boolean, userId: number) =>\r\n\t\t({\r\n\t\t\ttype: \"TOGGLE_FOLLOWING_PROGRESS\",\r\n\t\t\tfollowingProgress,\r\n\t\t\tuserId,\r\n\t\t} as const),\r\n};\r\n\r\nexport const getUsers =\r\n\t(currentPage: number, pageSize: number, filter: FilterType): ThunkType =>\r\n    (dispatch) => {\r\n\t\tdispatch(actions.toggleIsFetching(true));\r\n\t\tdispatch(actions.setCurrentPage(currentPage));\r\n\t\tdispatch(actions.setFilter(filter));\r\n\t\tusersAPI.getUsers(currentPage, pageSize, filter).then((data) => {\r\n\t\t\tdispatch(actions.setUsers(data.items));\r\n\t\t\tdispatch(actions.toggleIsFetching(false));\r\n\t\t\tdispatch(actions.setTotalUsersCount(data.totalCount));\r\n\t\t});\r\n\t};\r\nconst _followUnfollowFlow = (\r\n\tdispatch: Dispatch<ActionsType>,\r\n\tuserId: number,\r\n\tapiMethod: (userId: number) => Promise<ResponseType>,\r\n\tactionCreator: (userId: number) => ActionsType\r\n) => {\r\n\tdispatch(actions.toggleFollowingProgress(true, userId));\r\n\tapiMethod(userId).then((data) => {\r\n\t\tif (data.resultCode === ResultCodesEnum.Success) {\r\n\t\t\tdispatch(actionCreator(userId));\r\n\t\t}\r\n\t\tdispatch(actions.toggleFollowingProgress(false, userId));\r\n\t});\r\n};\r\n\r\nexport const follow =\r\n\t(userId: number): ThunkType =>\r\n\t(dispatch) => {\r\n\t\tlet apiMethod = usersAPI.followUser;\r\n\t\tlet actionCreator = actions.acceptFollow;\r\n\t\t_followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n\t};\r\nexport const unfollow =\r\n\t(userId: number): ThunkType =>\r\n\t(dispatch) => {\r\n\t\tlet apiMethod = usersAPI.unfollowUser;\r\n\t\tlet actionCreator = actions.acceptUnfollow;\r\n\t\t_followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n\t};\r\n\r\nexport default usersReducer;\r\n","import axios from \"axios\";\r\nimport { UserType } from \"../types/types\";\r\n\r\nexport const instance = axios.create({\r\n\tbaseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n\twithCredentials: true,\r\n\theaders: {\r\n\t\t\"API-KEY\": \"c1f0b7d1-dc16-41bd-b130-0fd123149d60\",\r\n\t\t//c1f0b7d1-dc16-41bd-b130-0fd123149d60\r\n\t\t//52d41bee-1ff2-442f-88ef-58198d527466\r\n\t},\r\n});\r\nexport enum ResultCodesEnum {\r\n\tSuccess = 0,\r\n\tError = 1,\r\n}\r\nexport enum ResultCodesEnumCaptcha {\r\n\tSuccess = 0,\r\n\tError = 1,\r\n\tCapthaIsRequired = 10,\r\n}\r\nexport type ResponseType<D = {}, RC = ResultCodesEnum> = {\r\n\tdata: D;\r\n\tresultCode: RC;\r\n\tmessages: Array<string>;\r\n};\r\n\r\nexport type GetItemsType = {\r\n\titems: Array<UserType>;\r\n\ttotalCount: number;\r\n\terror: string | null;\r\n};\r\n","import { InferActionsTypes } from \"../ReduxStore\";\r\n\r\ntype InitialStateType = typeof initialState;\r\nexport type DialogType = {\r\n\tid: number;\r\n\tname: string;\r\n};\r\nexport type MessagesType = {\r\n\tid: number;\r\n\tmessage: string;\r\n};\r\nconst initialState = {\r\n\tdialogsData: [\r\n\t\t{ id: 1, name: \"Петя\" },\r\n\t\t{ id: 2, name: \"Маша\" },\r\n\t\t{ id: 3, name: \"Катя\" },\r\n\t\t{ id: 4, name: \"Ваня\" },\r\n\t\t{ id: 5, name: \"Кира\" },\r\n\t] as Array<DialogType>,\r\n\tmessagesData: [\r\n\t\t{ id: 1, message: \"Ку!\" },\r\n\t\t{ id: 2, message: \"Как дела?\" },\r\n\t\t{ id: 3, message: \"Все гуд\" },\r\n\t] as Array<MessagesType>,\r\n};\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>;\r\nconst diallogsReducer = (\r\n\tstate: InitialStateType = initialState,\r\n\taction: ActionsType\r\n): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase \"SEND_MESSAGE\":\r\n\t\t\tif (action.message === undefined) {\r\n\t\t\t\treturn state;\r\n\t\t\t}\r\n\t\t\tlet message = {\r\n\t\t\t\tid: 4,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t};\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessagesData: [...state.messagesData, message],\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\nexport const actions = {\r\n\tsendMessage: (message: string) =>\r\n\t\t({\r\n\t\t\ttype: \"SEND_MESSAGE\",\r\n\t\t\tmessage,\r\n\t\t} as const),\r\n};\r\n\r\nexport default diallogsReducer;\r\n","import { checkAuth } from \"./AuthReducer\";\r\nimport { BaseThunkType, InferActionsTypes } from \"../ReduxStore\";\r\n\r\ntype InitialStateType = typeof initialState;\r\nlet initialState = {\r\n\tinitialized: false,\r\n};\r\ntype ActionsType = InferActionsTypes<typeof actions>;\r\ntype ThunkType = BaseThunkType<ActionsType>;\r\nconst appReducer = (\r\n\tstate: InitialStateType = initialState,\r\n\taction: ActionsType\r\n): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase \"SET_INITIALIZE\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinitialized: true,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\nconst actions = {\r\n\tinitializedSuccess: () => ({ type: \"SET_INITIALIZE\" } as const),\r\n};\r\n\r\nexport const initializeApp = (): ThunkType => (dispatch) => {\r\n\tlet promise = dispatch(checkAuth());\r\n\tPromise.all([promise]).then(() => {\r\n\t\tdispatch(actions.initializedSuccess());\r\n\t});\r\n};\r\n\r\nexport default appReducer;\r\n","import { Action, applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport thunk, { ThunkAction } from \"redux-thunk\";\r\nimport appReducer from \"./Reducers/AppReducer\";\r\nimport authReducer from \"./Reducers/AuthReducer\";\r\nimport diallogsReducer from \"./Reducers/DialogsReducer\";\r\nimport profileReducer from \"./Reducers/ProfileReducer\";\r\nimport UsersReducer from \"./Reducers/UsersReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n\tprofilePage: profileReducer,\r\n\tdialogsPage: diallogsReducer,\r\n\tusersPage: UsersReducer,\r\n\tauth: authReducer,\r\n\tform: formReducer,\r\n\tapp: appReducer,\r\n});\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never;\r\nexport type BaseThunkType<A extends Action, R = void> = ThunkAction<R, AppStateType, unknown, A>;\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\nexport default store;\r\n","import { UserOutlined } from \"@ant-design/icons\";\r\nimport { Avatar } from \"antd\";\r\nimport { FC } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { logOut } from \"../../redux/Reducers/AuthReducer\";\r\nimport { getAuthState } from \"../../redux/Selectors/Selectors\";\r\nimport style from \"./MyHeader.module.css\";\r\nconst MyHeader: FC = () => {\r\n\tconst { isAuth, login } = useSelector(getAuthState);\r\n\tconst dispatch = useDispatch();\r\n\tconst handleLogout = () => {\r\n\t\tdispatch(logOut());\r\n\t};\r\n\treturn (\r\n\t\t<header className={style.header}>\r\n\t\t\t<div className={style.login}>\r\n\t\t\t\t<Avatar  icon={<UserOutlined /> } />\r\n\t\t\t\t{isAuth ? (\r\n\t\t\t\t\t<div className={style.user}>\r\n\t\t\t\t\t\t{login}\r\n\t\t\t\t\t\t<button onClick={handleLogout} className={style.button}>\r\n\t\t\t\t\t\t\tВыйти\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<NavLink to={\"/login\"} className={style.button}>\r\n\t\t\t\t\t\tВойти\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default MyHeader;\r\n","import { Menu } from \"antd\";\r\nimport { FC } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getAuthState } from \"../../redux/Selectors/Selectors\";\r\n\r\nconst Navbar: FC = () => {\r\n  const { userId } = useSelector(getAuthState);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Menu mode=\"inline\" defaultSelectedKeys={[\"1\"]} defaultOpenKeys={[\"sub1\"]} style={{ height: \"100%\" }}>\r\n\t\t\t\t<Menu.Item key=\"1\">\r\n\t\t\t\t\t<Link to={`/profile/${userId}`}>Profile</Link>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item key=\"2\">\r\n\t\t\t\t\t<Link to=\"/dialogs\">Messages</Link>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item key=\"3\">\r\n\t\t\t\t\t<Link to=\"/users\">Users</Link>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item key=\"4\">\r\n\t\t\t\t\t<Link to=\"/chat\">Chat</Link>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t</Menu>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import { Layout } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { FC, Suspense, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter, Navigate, Route, Routes } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Preloader from \"./components/Common/Preloader/Preloader\";\r\nimport MyHeader from \"./components/Header/MyHeader\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport { initializeApp } from \"./redux/Reducers/AppReducer\";\r\nimport { getAppsState, getAuthState } from \"./redux/Selectors/Selectors\";\r\nconst { Header, Content, Sider } = Layout;\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\r\nconst Users = React.lazy(() => import(\"./components/Users/Users\"));\r\nconst Login = React.lazy(() => import(\"./components/Login/Login\"));\r\nconst ChatPage = React.lazy(() => import(\"./Pages/Chat/ChatPage\"));\r\n\r\nconst App: FC = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst { userId } = useSelector(getAuthState);\r\n\tconst { initialized } = useSelector(getAppsState);\r\n\tuseEffect(() => {\r\n\t\tdispatch(initializeApp());\r\n\t}, []);\r\n\tif (!initialized) {\r\n\t\treturn <Preloader />;\r\n\t}\r\n \r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Layout>\r\n\t\t\t\t<Header className=\"header\">\r\n\t\t\t\t\t<div className=\"logo\" />\r\n\t\t\t\t\t<MyHeader />\r\n\t\t\t\t</Header>\r\n\t\t\t\t<Content style={{ padding: \"0 50px\" }}>\r\n\t\t\t\t\t<Layout className=\"site-layout-background\" style={{ padding: \"24px 0\" }}>\r\n\t\t\t\t\t\t<Sider className=\"site-layout-background\" width={200}>\r\n\t\t\t\t\t\t\t<Navbar />\r\n\t\t\t\t\t\t</Sider>\r\n\t\t\t\t\t\t<Content style={{ padding: \"0 24px\", minHeight: 280 }}>\r\n\t\t\t\t\t\t\t<Suspense fallback={<Preloader />}>\r\n\t\t\t\t\t\t\t\t<Routes>\r\n\t\t\t\t\t\t\t\t\t<Route path=\"/\" element={<Navigate to={`/profile/${userId}`} />} />\r\n\t\t\t\t\t\t\t\t\t<Route path=\"/dialogs/*\" element={<DialogsContainer />} />\r\n\t\t\t\t\t\t\t\t\t<Route path=\"/profile/:id\" element={<ProfileContainer />} />\r\n\t\t\t\t\t\t\t\t\t<Route path=\"/users\" element={<Users />} />\r\n                  <Route path=\"/login\" element={<Login />} />\r\n                  <Route path=\"/chat\" element={<ChatPage />} />\r\n\t\t\t\t\t\t\t\t\t<Route path=\"*\" element={<div>404 not found</div>} />\r\n\t\t\t\t\t\t\t\t</Routes>\r\n\t\t\t\t\t\t\t</Suspense>\r\n\t\t\t\t\t\t</Content>\r\n\t\t\t\t\t</Layout>\r\n\t\t\t\t</Content>\r\n\t\t\t</Layout>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import store from \"./Social/redux/ReduxStore\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Social/App\";\nimport { Provider } from \"react-redux\";\nimport ghpages from 'gh-pages';\n\nghpages.publish('src', {\n  branch:'test gh-pages',\n  repo: 'https://github.com/TheCatLucky/FirstGame.git ',\n});\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n","import { AppStateType } from \"../ReduxStore\";\r\n\r\nexport const getUsersState = (state: AppStateType) => state.usersPage;\r\nexport const getProfileState = (state: AppStateType) => state.profilePage;\r\nexport const getAuthState = (state: AppStateType) => state.auth;\r\nexport const getDialogsState = (state: AppStateType) => state.dialogsPage;\r\nexport const getAppsState = (state: AppStateType) => state.app;","import { LoginFormValuesType } from \"../components/Login/Login\";\r\nimport { instance, ResponseType, ResultCodesEnumCaptcha } from \"./Api\";\r\nexport type MeResponseDataType = {\r\n\tid: number;\r\n\temail: string;\r\n\tlogin: string;\r\n};\r\nexport type LoginResponseDataType = {\r\n\tuserId: number;\r\n};\r\nexport const authAPI = {\r\n\tgetMe() {\r\n\t\treturn instance.get<ResponseType<MeResponseDataType>>(`auth/me`).then(({ status, data }) => {\r\n\t\t\tconsole.log(status, \"Авторизация\");\r\n\t\t\treturn data;\r\n\t\t});\r\n\t},\r\n\tlogIn({ email, password, rememberMe, captcha }: LoginFormValuesType) {\r\n\t\treturn instance\r\n\t\t\t.post<ResponseType<LoginResponseDataType, ResultCodesEnumCaptcha>>(`auth/login`, {\r\n\t\t\t\temail,\r\n\t\t\t\tpassword,\r\n\t\t\t\trememberMe,\r\n\t\t\t\tcaptcha,\r\n\t\t\t})\r\n\t\t\t.then(({ status, data }) => {\r\n\t\t\t\tconsole.log(status, \"Логинизация\");\r\n\t\t\t\treturn data;\r\n\t\t\t});\r\n\t},\r\n\tlogOut() {\r\n\t\treturn instance.delete<ResponseType>(`auth/login`).then(({ status, data }) => {\r\n\t\t\tconsole.log(status, \"Разлогинен\");\r\n\t\t\treturn data;\r\n\t\t});\r\n\t},\r\n};\r\n","import { instance } from \"./Api\";\r\ntype GetCaptchaUrlType = {\r\n\turl: string;\r\n};\r\nexport const securityAPI = {\r\n\tgetCaptureUrl() {\r\n\t\treturn instance.get<GetCaptchaUrlType>(`security/get-captcha-url`).then(({ status, data }) => {\r\n\t\t\tconsole.log(status, \"Получение капчи\");\r\n\t\t\treturn data;\r\n\t\t});\r\n\t},\r\n};\r\n","import { FormAction, stopSubmit } from \"redux-form\";\r\nimport { ResultCodesEnum, ResultCodesEnumCaptcha } from \"../../API/Api\";\r\nimport { authAPI } from \"../../API/authAPI\";\r\nimport { securityAPI } from \"../../API/securityAPI\";\r\nimport { LoginFormValuesType } from \"../../components/Login/Login\";\r\nimport { BaseThunkType, InferActionsTypes } from \"../ReduxStore\";\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst initialState = {\r\n\tuserId: null as number | null,\r\n\temail: null as string | null,\r\n\tlogin: null as string | null,\r\n\tisAuth: false as boolean,\r\n\tcaptchaURL: null as string | null,\r\n};\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>;\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>;\r\nconst authReducer = (\r\n\tstate: InitialStateType = initialState,\r\n\taction: ActionsType\r\n): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase \"SET_USER_DATA\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload,\r\n\t\t\t};\r\n\t\tcase \"SET_CAPTCHA_URL\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcaptchaURL: action.payload.captchaUrl,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\nconst actions = {\r\n\tsetAuthUserData: (\r\n\t\tuserId: number | null,\r\n\t\temail: string | null,\r\n\t\tlogin: string | null,\r\n\t\tisAuth: boolean\r\n\t) =>\r\n\t\t({\r\n\t\t\ttype: \"SET_USER_DATA\",\r\n\t\t\tpayload: {\r\n\t\t\t\tuserId,\r\n\t\t\t\temail,\r\n\t\t\t\tlogin,\r\n\t\t\t\tisAuth,\r\n\t\t\t},\r\n\t\t} as const),\r\n\tsetCaptchaURL: (captchaUrl: string) =>\r\n\t\t({\r\n\t\t\ttype: \"SET_CAPTCHA_URL\",\r\n\t\t\tpayload: {\r\n\t\t\t\tcaptchaUrl,\r\n\t\t\t},\r\n\t\t} as const),\r\n};\r\n\r\nexport const checkAuth = (): ThunkType => (dispatch) => {\r\n\treturn authAPI.getMe().then((data) => {\r\n\t\tif (data.resultCode === ResultCodesEnum.Success) {\r\n\t\t\tlet { id, login, email } = data.data;\r\n\t\t\tdispatch(actions.setAuthUserData(id, email, login, true));\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport const logIn =\r\n\t(formData: LoginFormValuesType): ThunkType =>\r\n\t(dispatch) => {\r\n\t\tauthAPI.logIn(formData).then(({ resultCode, messages }) => {\r\n\t\t\tif (resultCode === ResultCodesEnumCaptcha.Success) {\r\n\t\t\t\tdispatch(checkAuth());\r\n\t\t\t} else {\r\n\t\t\t\tif (resultCode === ResultCodesEnumCaptcha.CapthaIsRequired) {\r\n\t\t\t\t\tdispatch(getCaptchaUrl());\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet message = messages.length > 0 ? messages[0] : \"Some Error\";\r\n\t\t\t\t\tdispatch(stopSubmit(\"login\", { _error: message }));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\nexport const logOut = (): ThunkType => (dispatch) => {\r\n\tauthAPI.logOut().then(({ resultCode }) => {\r\n\t\tif (resultCode === ResultCodesEnum.Success) {\r\n\t\t\tdispatch(actions.setAuthUserData(null, null, null, false));\r\n\t\t}\r\n\t});\r\n};\r\nexport const getCaptchaUrl = (): ThunkType => (dispatch) => {\r\n\tsecurityAPI.getCaptureUrl().then(({url}) => {\r\n\t\tconsole.log(url);\r\n\t\tdispatch(actions.setCaptchaURL(url));\r\n\t});\r\n};\r\n\r\nexport default authReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"MyHeader_login__3yixz\",\"button\":\"MyHeader_button__23zdP\",\"user\":\"MyHeader_user__3m10Z\"};"],"sourceRoot":""}