{"version":3,"sources":["Social/components/Common/FormsControlls/FormsControls.tsx","Social/components/Common/FormsControlls/FormControls.module.css","Social/components/Utils/Validators/Validators.ts","Social/components/Login/Login.module.css","Social/components/Login/Login.tsx"],"names":["FormControl","meta","children","hasError","touched","error","className","style","formControl","Textarea","props","input","Input","module","exports","required","value","maxLengthCreator","maxLength","length","ReduxLoginForm","reduxForm","form","handleSubmit","captchaURL","onSubmit","formSummaryError","name","component","validate","formInput","placeholder","type","remember","captcha","src","alt","Login","useSelector","getAuthState","isAuth","userId","dispatch","useDispatch","to","formData","logIn","login","href","a","target","rel"],"mappings":"8NAIMA,EAAqC,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC7CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACC,sBAAKC,UAAWC,IAAMC,YAAc,KAAOL,EAAWI,IAAMF,MAAQ,IAApE,UACEH,EACAC,GAAY,+BAAOF,EAAKI,YAKfI,EAAkC,SAACC,GAC/C,OACC,cAACV,EAAD,2BAAiBU,GAAjB,aACC,oDAAcA,EAAMC,OAAWD,QAKrBE,EAA+B,SAACF,GAC5C,OACC,cAACV,EAAD,2BAAiBU,GAAjB,aACC,iDAAWA,EAAMC,OAAWD,S,oBCxB/BG,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,iCCC1E,oEAAO,IAAMC,EAAyB,SAACC,GACtC,IAAIA,EACJ,MAAO,qBAGKC,EACZ,SAACC,GAAD,OACA,YACC,GADe,EAAbC,OACWD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCT1BL,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,EAAI,iBAAiB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,iBAAmB,gCAAgC,QAAU,yB,iCCApO,uGAwFMM,EAAiBC,YAAsD,CAAEC,KAAM,SAA9DD,EA1CsF,SAAC,GAIvG,IAHNE,EAGK,EAHLA,aACAlB,EAEK,EAFLA,MACAmB,EACK,EADLA,WAEA,OACC,uBAAMlB,UAAWC,IAAMe,KAAMG,SAAUF,EAAvC,UACElB,GAAS,mBAAGC,UAAWC,IAAMmB,iBAApB,SAAuCrB,IACjD,8BACC,cAAC,IAAD,CACCsB,KAAM,QACNC,UAAWhB,IACXiB,SAAU,CAACd,KACXT,UAAWC,IAAMuB,UACjBC,YAAa,YAGf,8BACC,cAAC,IAAD,CACCJ,KAAM,WACNC,UAAWhB,IACXiB,SAAU,CAACd,KACXT,UAAWC,IAAMuB,UACjBC,YAAa,WACbC,KAAM,eAGR,sBAAK1B,UAAWC,IAAM0B,SAAtB,UACC,cAAC,IAAD,CAAON,KAAM,aAAcC,UAAWhB,IAAOoB,KAAM,WAAY1B,UAAWC,IAAM0B,WADjF,iBAICT,GAAc,qBAAKlB,UAAWC,IAAM2B,QAASC,IAAKX,EAAYY,IAAI,YAClEZ,GACA,cAAC,IAAD,CAAOG,KAAM,UAAWC,UAAWhB,IAAOoB,KAAM,QAAS1B,UAAWC,IAAMuB,YAE3E,8BACC,mDASWO,UA1EG,WACjB,MAAuCC,YAAYC,KAA3CC,EAAR,EAAQA,OAAQhB,EAAhB,EAAgBA,WAAYiB,EAA5B,EAA4BA,OACtBC,EAAWC,cAIjB,OAAIH,EACI,cAAC,IAAD,CAAUI,GAAE,mBAAcH,KAGjC,gCACC,uCACA,cAACrB,EAAD,CAAgBK,SATD,SAACoB,GACjBH,EAASI,YAAMD,KAQsBrB,WAAYA,IAChD,oBAAGlB,UAAWC,IAAMwC,MAApB,iIAEC,mBACCC,KAAK,wCACL1C,UAAWC,IAAM0C,EACjBC,OAAO,SACPC,IAAI,aAJL,4CAFD","file":"static/js/7.3c41d488.chunk.js","sourcesContent":["import { FC } from \"react\";\r\nimport { WrappedFieldProps } from \"redux-form\";\r\nimport style from \"./FormControls.module.css\";\r\n\r\nconst FormControl: FC<WrappedFieldProps> = ({ meta, children }) => {\r\n\tconst hasError = meta.touched && meta.error;\r\n\treturn (\r\n\t\t<div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n\t\t\t{children}\r\n\t\t\t{hasError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const Textarea: FC<WrappedFieldProps> = (props) => {\r\n\treturn (\r\n\t\t<FormControl {...props}>\r\n\t\t\t<textarea {...props.input} {...props} />\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport const Input: FC<WrappedFieldProps> = (props) => {\r\n\treturn (\r\n\t\t<FormControl {...props}>\r\n\t\t\t<input {...props.input} {...props}></input>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__11yvM\",\"error\":\"FormControls_error__1l01I\"};","type ValidateType = (value: string) => string | undefined;\r\n\r\nexport const required: ValidateType = (value) => {\r\n\tif (value) return undefined;\r\n\treturn \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator =\r\n\t(maxLength: number): ValidateType =>\r\n\t({ length }) => {\r\n\t\tif (length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\t\treturn undefined;\r\n\t};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3Y674\",\"a\":\"Login_a__3MgwY\",\"form\":\"Login_form__2_i0D\",\"remember\":\"Login_remember__bWeK8\",\"formInput\":\"Login_formInput__1NQ18\",\"formSummaryError\":\"Login_formSummaryError__b_ha9\",\"captcha\":\"Login_captcha__3k_QO\"};","import { FC } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { logIn } from \"../../redux/Reducers/AuthReducer\";\r\nimport { getAuthState } from \"../../redux/Selectors/Selectors\";\r\nimport { Input } from \"../Common/FormsControlls/FormsControls\";\r\nimport { required } from \"../Utils/Validators/Validators\";\r\nimport style from \"./Login.module.css\";\r\nexport type LoginFormValuesType = {\r\n\temail: string;\r\n\tpassword: string;\r\n\trememberMe: boolean;\r\n\tcaptcha: string;\r\n};\r\ntype LoginFormOwnPropsType = {\r\n\tcaptchaURL: string | null;\r\n};\r\nconst Login: FC = () => {\r\n\tconst { isAuth, captchaURL, userId } = useSelector(getAuthState);\r\n\tconst dispatch = useDispatch();\r\n\tconst onSubmit = (formData: LoginFormValuesType) => {\r\n\t\tdispatch(logIn(formData));\r\n\t};\r\n\tif (isAuth) {\r\n\t\treturn <Navigate to={`/profile/${userId}`} />;\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Login</h1>\r\n\t\t\t<ReduxLoginForm onSubmit={onSubmit} captchaURL={captchaURL} />\r\n\t\t\t<p className={style.login}>\r\n\t\t\t\tНужно залогиниться на\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://social-network.samuraijs.com/\"\r\n\t\t\t\t\tclassName={style.a}\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noreferrer\"\r\n\t\t\t\t>\r\n\t\t\t\t\tсайте\r\n\t\t\t\t</a>\r\n\t\t\t\t, прежде чем смотреть страницы сайта!\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst LoginForm: FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnPropsType> & LoginFormOwnPropsType> = ({\r\n\thandleSubmit,\r\n\terror,\r\n\tcaptchaURL,\r\n}) => {\r\n\treturn (\r\n\t\t<form className={style.form} onSubmit={handleSubmit}>\r\n\t\t\t{error && <p className={style.formSummaryError}>{error}</p>}\r\n\t\t\t<div>\r\n\t\t\t\t<Field\r\n\t\t\t\t\tname={\"email\"}\r\n\t\t\t\t\tcomponent={Input}\r\n\t\t\t\t\tvalidate={[required]}\r\n\t\t\t\t\tclassName={style.formInput}\r\n\t\t\t\t\tplaceholder={\"Login\"}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Field\r\n\t\t\t\t\tname={\"password\"}\r\n\t\t\t\t\tcomponent={Input}\r\n\t\t\t\t\tvalidate={[required]}\r\n\t\t\t\t\tclassName={style.formInput}\r\n\t\t\t\t\tplaceholder={\"Password\"}\r\n\t\t\t\t\ttype={\"password\"}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className={style.remember}>\r\n\t\t\t\t<Field name={\"rememberMe\"} component={Input} type={\"checkbox\"} className={style.remember} />\r\n\t\t\t\tremember me\r\n\t\t\t</div>\r\n\t\t\t{captchaURL && <img className={style.captcha} src={captchaURL} alt=\"captcha\" />}\r\n\t\t\t{captchaURL && (\r\n\t\t\t\t<Field name={\"captcha\"} component={Input} type={\"Input\"} className={style.formInput} />\r\n\t\t\t)}\r\n\t\t\t<div>\r\n\t\t\t\t<button>Login</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nconst ReduxLoginForm = reduxForm<LoginFormValuesType, LoginFormOwnPropsType>({ form: \"login\" })(\r\n\tLoginForm\r\n);\r\nexport default Login;\r\n"],"sourceRoot":""}