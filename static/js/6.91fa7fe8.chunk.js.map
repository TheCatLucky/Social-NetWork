{"version":3,"sources":["Social/components/Common/FormsControlls/FormsControls.tsx","Social/components/Common/FormsControlls/FormControls.module.css","Social/components/Utils/Validators/Validators.ts","Social/components/Dialogs/Dialogs.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Social/Hoc/WithAuthRedirect.tsx","Social/components/Dialogs/DialogItem/DialogItem.tsx","Social/components/Dialogs/Message/Message.tsx","Social/components/Dialogs/MessageForm/MessageForm.tsx","Social/components/Dialogs/Dialogs.tsx","Social/components/Dialogs/DialogsContainer.tsx"],"names":["FormControl","meta","children","hasError","touched","error","className","style","formControl","Textarea","props","input","Input","module","exports","required","value","maxLengthCreator","maxLength","length","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","WrappedComponent","connect","to","restProps","DialogItem","id","name","path","item","isActive","active","Message","message","messageItem","MessageForm","reduxForm","form","onSubmitSuccess","res","dispatch","reset","handleSubmit","onSubmit","Field","component","validate","cols","rows","placeholder","messageArea","Dialogs","useSelector","getDialogsState","dialogsData","messagesData","useDispatch","dialogResult","map","messagesResult","page","dialogs","messages","messageData","actions","sendMessage","dialogNewMessage","DialogsContainer","compose"],"mappings":"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","file":"static/js/6.91fa7fe8.chunk.js","sourcesContent":["import { FC } from \"react\";\r\nimport { WrappedFieldProps } from \"redux-form\";\r\nimport style from \"./FormControls.module.css\";\r\n\r\nconst FormControl: FC<WrappedFieldProps> = ({ meta, children }) => {\r\n\tconst hasError = meta.touched && meta.error;\r\n\treturn (\r\n\t\t<div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n\t\t\t{children}\r\n\t\t\t{hasError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const Textarea: FC<WrappedFieldProps> = (props) => {\r\n\treturn (\r\n\t\t<FormControl {...props}>\r\n\t\t\t<textarea {...props.input} {...props} />\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport const Input: FC<WrappedFieldProps> = (props) => {\r\n\treturn (\r\n\t\t<FormControl {...props}>\r\n\t\t\t<input {...props.input} {...props}></input>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__11yvM\",\"error\":\"FormControls_error__1l01I\"};","type ValidateType = (value: string) => string | undefined;\r\n\r\nexport const required: ValidateType = (value) => {\r\n\tif (value) return undefined;\r\n\treturn \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator =\r\n\t(maxLength: number): ValidateType =>\r\n\t({ length }) => {\r\n\t\tif (length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\t\treturn undefined;\r\n\t};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Dialogs_page__XNWGu\",\"dialogs\":\"Dialogs_dialogs__2oePs\",\"item\":\"Dialogs_item__1lQ19\",\"active\":\"Dialogs_active__2yb0P\",\"messages\":\"Dialogs_messages__1rwNu\",\"messageItem\":\"Dialogs_messageItem__rJM4z\",\"messageArea\":\"Dialogs_messageArea__3oo4o\"};","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { FC } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { AppStateType } from \"../redux/ReduxStore\";\r\nlet mapStateToPropsRedirect = (state: AppStateType) => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth,\r\n\t};\r\n};\r\ntype MapProps = {\r\n\tisAuth: boolean;\r\n};\r\nexport function withAuthRedirect<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n\tconst RedirectComponent: FC<MapProps> = (props) => {\r\n\t\tif (!props.isAuth) {\r\n\t\t\treturn <Navigate to={\"/login\"} />;\r\n\t\t}\r\n\r\n\t\tlet { isAuth, ...restProps } = props;\r\n\t\treturn <WrappedComponent {...(restProps as WCP)} />;\r\n\t};\r\n\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\treturn ConnectedAuthRedirectComponent;\r\n}\r\n","import { FC } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport style from \"./../Dialogs.module.css\";\r\ntype PropsType = {\r\n\tid: number;\r\n\tname: string;\r\n};\r\nconst DialogItem: FC<PropsType> = ({ id, name }) => {\r\n\tlet path = \"/dialogs/\" + id;\r\n\treturn (\r\n\t\t<div className={style.item}>\r\n\t\t\t<NavLink to={path} className={({ isActive }) => (isActive ? `${style.active}` : \"\")}>\r\n\t\t\t\t{name}\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DialogItem;\r\n","import style from \"./../Dialogs.module.css\";\r\nimport { FC } from \"react\";\r\ntype PropsType = {\r\n\tid: number;\r\n\tmessage: string;\r\n};\r\nconst Message: FC<PropsType> = ({ message }) => {\r\n\treturn <div className={style.messageItem}>{message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import { FC } from \"react\";\r\nimport { Field, InjectedFormProps, reduxForm, reset } from \"redux-form\";\r\nimport { Textarea } from \"../../Common/FormsControlls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../Utils/Validators/Validators\";\r\nimport style from \"./../Dialogs.module.css\";\r\nconst maxLength = maxLengthCreator(50);\r\n\r\ntype DialogsFormType = {\r\n\tdialogNewMessage: string;\r\n};\r\nconst NewMessge: FC<InjectedFormProps<DialogsFormType>> = ({ handleSubmit }) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<Field\r\n\t\t\t\tname={\"dialogNewMessage\"}\r\n\t\t\t\tcomponent={Textarea}\r\n\t\t\t\tvalidate={[required, maxLength]}\r\n\t\t\t\tcols={30}\r\n\t\t\t\trows={3}\r\n\t\t\t\tplaceholder={\"Введите сообщение\"}\r\n\t\t\t\tclassName={style.messageArea}\r\n\t\t\t/>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Отправить сообщение</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\nconst clear = (res: any, dispatch: any) => {\r\n\tdispatch(reset(\"dialogNewMessage\"));\r\n};\r\nconst MessageForm = reduxForm<DialogsFormType>({\r\n\tform: \"dialogNewMessage\",\r\n\tonSubmitSuccess: clear,\r\n})(NewMessge);\r\n\r\nexport default MessageForm;\r\n","import { FC } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actions } from \"../../redux/Reducers/DialogsReducer\";\r\nimport { getDialogsState } from \"../../redux/Selectors/Selectors\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport MessageForm from \"./MessageForm/MessageForm\";\r\n\r\ntype DialogsFormType = {\r\n\tdialogNewMessage: string;\r\n};\r\nconst Dialogs: FC = () => {\r\n\tconst { dialogsData, messagesData } = useSelector(getDialogsState);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tlet dialogResult = dialogsData.map((id) => {\r\n\t\treturn <DialogItem key={id.id} id={id.id} name={id.name} />;\r\n\t});\r\n\tlet messagesResult = messagesData.map((id) => {\r\n\t\treturn <Message key={id.id} id={id.id} message={id.message} />;\r\n\t});\r\n\r\n\tlet onSendMessageClick = (messageData: DialogsFormType) => {\r\n\t\tdispatch(actions.sendMessage(messageData.dialogNewMessage));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={style.page}>\r\n\t\t\t<div className={style.dialogs}>\r\n\t\t\t\tИмена\r\n\t\t\t\t{dialogResult}\r\n\t\t\t</div>\r\n\t\t\t<div className={style.messages}>\r\n\t\t\t\tСообщения\r\n\t\t\t\t{messagesResult}\r\n\t\t\t\t<MessageForm onSubmit={onSendMessageClick} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Dialogs;\r\n","import { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../Hoc/WithAuthRedirect\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nconst DialogsContainer = compose<React.ComponentType>(withAuthRedirect)(Dialogs);\r\n\r\nexport default DialogsContainer;\r\n"],"sourceRoot":""}