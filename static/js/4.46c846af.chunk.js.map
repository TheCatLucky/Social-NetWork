{"version":3,"sources":["Social/components/Common/FormsControlls/FormsControls.tsx","Social/components/Common/FormsControlls/FormControls.module.css","Social/components/Utils/Validators/Validators.ts","Social/img/user_default.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Social/Hoc/WithAuthRedirect.tsx","Social/components/Profile/MyPosts/MyPosts.module.css","Social/components/Profile/MyPosts/Post/Post.module.css","Social/components/Profile/Profile.module.css","Social/components/Profile/ProfileInfo/ProfileInfo.module.css","Social/components/Profile/ProfileInfo/ProfileStatus.module.css","../node_modules/nanoid/index.browser.js","Social/components/Profile/MyPosts/Post/Post.tsx","Social/components/Profile/MyPosts/PostForm/PostForm.tsx","Social/components/Profile/MyPosts/MyPosts.tsx","Social/components/Profile/ProfileInfo/ProfileStatus.tsx","Social/components/Profile/ProfileInfo/ProfileInfo.tsx","Social/components/Profile/Profile.tsx","Social/components/Profile/ProfileContainer.tsx"],"names":["FormControl","meta","children","hasError","touched","error","className","style","formControl","Textarea","props","input","Input","module","exports","required","value","maxLengthCreator","maxLength","length","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","WrappedComponent","connect","to","restProps","Post","message","name","id","age","dispatch","useDispatch","item","img","src","alt","messageText","itemInfo","buttonLike","onClick","console","log","actions","removePost","buttonDelete","NewPostForm","reduxForm","form","onSubmitSuccess","res","reset","handleSubmit","onSubmit","Field","component","validate","cols","rows","placeholder","messageArea","genId","modelId","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","MyPosts","postsData","useSelector","profilePage","postsResult","map","post","posts","addPost","newPost","MyPostsMemo","React","memo","ProfileStatusWithHooks","status","useState","editMode","setEditMode","currentStatus","setCurrentStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","profile","isOwner","Preloader","avatar","photos","small","fullName","userPhoto","type","files","savePhoto","ProfileStatus","Profile","compose","useParams","userId","getAuthState","getProfileState","curUserId","getProfile","getStatus","refreshProfile"],"mappings":"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","file":"static/js/4.46c846af.chunk.js","sourcesContent":["import { FC } from \"react\";\r\nimport { WrappedFieldProps } from \"redux-form\";\r\nimport style from \"./FormControls.module.css\";\r\n\r\nconst FormControl: FC<WrappedFieldProps> = ({ meta, children }) => {\r\n\tconst hasError = meta.touched && meta.error;\r\n\treturn (\r\n\t\t<div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n\t\t\t{children}\r\n\t\t\t{hasError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const Textarea: FC<WrappedFieldProps> = (props) => {\r\n\treturn (\r\n\t\t<FormControl {...props}>\r\n\t\t\t<textarea {...props.input} {...props} />\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport const Input: FC<WrappedFieldProps> = (props) => {\r\n\treturn (\r\n\t\t<FormControl {...props}>\r\n\t\t\t<input {...props.input} {...props}></input>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__11yvM\",\"error\":\"FormControls_error__1l01I\"};","type ValidateType = (value: string) => string | undefined;\r\n\r\nexport const required: ValidateType = (value) => {\r\n\tif (value) return undefined;\r\n\treturn \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator =\r\n\t(maxLength: number): ValidateType =>\r\n\t({ length }) => {\r\n\t\tif (length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\t\treturn undefined;\r\n\t};\r\n","export default __webpack_public_path__ + \"static/media/user_default.a6143582.png\";","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { FC } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { AppStateType } from \"../redux/ReduxStore\";\r\nlet mapStateToPropsRedirect = (state: AppStateType) => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth,\r\n\t};\r\n};\r\ntype MapProps = {\r\n\tisAuth: boolean;\r\n};\r\nexport function withAuthRedirect<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n\tconst RedirectComponent: FC<MapProps> = (props) => {\r\n\t\tif (!props.isAuth) {\r\n\t\t\treturn <Navigate to={\"/login\"} />;\r\n\t\t}\r\n\r\n\t\tlet { isAuth, ...restProps } = props;\r\n\t\treturn <WrappedComponent {...(restProps as WCP)} />;\r\n\t};\r\n\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\treturn ConnectedAuthRedirectComponent;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2aDEP\",\"messageArea\":\"MyPosts_messageArea__2Zdk0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1-oqb\",\"img\":\"Post_img__3OKQk\",\"buttonLike\":\"Post_buttonLike__1Agex\",\"name\":\"Post_name__2AhXX\",\"message\":\"Post_message__1IUxc\",\"messageText\":\"Post_messageText__1yaEv\",\"itemInfo\":\"Post_itemInfo__2UU-Y\",\"buttonDelete\":\"Post_buttonDelete__2IVxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2JdNt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__1TKkc\",\"avatar\":\"ProfileInfo_avatar__2c8DW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ProfileStatus_input__2W9ga\"};","import { urlAlphabet } from './url-alphabet/index.js'\nif (process.env.NODE_ENV !== 'production') {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, size, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * size) / alphabet.length)\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import React, { FC } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actions } from \"../../../../redux/Reducers/ProfileReducer\";\r\nimport style from \"./Post.module.css\";\r\ntype Props = {\r\n\tid: number;\r\n\tmessage: string;\r\n\tname: string;\r\n\tage: number;\r\n};\r\nconst Post: FC<Props> = ({ message, name, id, age }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst removePost = (id: number) => {\r\n\t\tconsole.log(id);\r\n\t\tdispatch(actions.removePost(id));\r\n\t};\r\n\treturn (\r\n\t\t<div className={style.item}>\r\n\t\t\t<div className={style.message}>\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName={style.img}\r\n\t\t\t\t\tsrc=\"https://www.film.ru/sites/default/files/filefield_paths/maxresdefault_1_24.jpg\"\r\n\t\t\t\t\talt=\"avatar\"\r\n\t\t\t\t/>\r\n\t\t\t\t<span className={style.messageText}>{message}</span>\r\n\t\t\t</div>\r\n\t\t\t<div className={style.itemInfo}>\r\n\t\t\t\t<span className={style.name}>\r\n\t\t\t\t\tName: {name} Age: {age}\r\n\t\t\t\t</span>\r\n\t\t\t\t<span className={style.buttonLike}>Like</span>\r\n\t\t\t\t<button onClick={() => removePost(id)} className={style.buttonDelete}>\r\n\t\t\t\t\tУдалить\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Post;\r\n","import { Field, InjectedFormProps, reduxForm, reset } from \"redux-form\";\r\nimport style from \"./../MyPosts.module.css\";\r\nimport { required, maxLengthCreator } from \"../../../Utils/Validators/Validators\";\r\nimport { Textarea } from \"../../../Common/FormsControlls/FormsControls\";\r\nimport { FC } from \"react\";\r\n\r\nexport type NewPostType = {\r\n\tnewPost: string;\r\n};\r\nconst maxLength = maxLengthCreator(50);\r\nconst NewPost: FC<InjectedFormProps<NewPostType>> = ({ handleSubmit }) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<Field\r\n\t\t\t\tname={\"newPost\"}\r\n\t\t\t\tcomponent={Textarea}\r\n\t\t\t\tvalidate={[required, maxLength]}\r\n\t\t\t\tcols={50}\r\n\t\t\t\trows={3}\r\n\t\t\t\tplaceholder={\"Введите текст поста\"}\r\n\t\t\t\tclassName={style.messageArea}\r\n\t\t\t/>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Отправить пост</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nconst clear = (res: any, dispatch: any) => {\r\n\tdispatch(reset(\"newPost\"));\r\n};\r\nconst NewPostForm = reduxForm<NewPostType>({\r\n\tform: \"newPost\",\r\n\tonSubmitSuccess: clear,\r\n})(NewPost);\r\n\r\nexport default NewPostForm;\r\n","import { nanoid } from \"nanoid\";\r\nimport React, { FC } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../../redux/ReduxStore\";\r\nimport { actions } from \"../../../redux/Reducers/ProfileReducer\";\r\nimport style from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport NewPostForm, { NewPostType } from \"./PostForm/PostForm\";\r\n\r\nfunction genId() {\r\n\t//кастомная генерация id\r\n\tlet modelId = nanoid();\r\n\treturn modelId;\r\n}\r\n\r\nconst MyPosts: FC = () => {\r\n\tconst postsData = useSelector((state: AppStateType) => state.profilePage.postsData);\r\n\tconst dispatch = useDispatch();\r\n\tlet postsResult = postsData.map((post) => {\r\n\t\treturn (\r\n\t\t\t<Post\r\n\t\t\t\tkey={genId()}\r\n\t\t\t\tid={post.id}\r\n\t\t\t\tmessage={post.message}\r\n\t\t\t\tname={post.name}\r\n\t\t\t\tage={post.age}\r\n\t\t\t/>\r\n\t\t);\r\n\t});\r\n\r\n\tlet addPost = (message: NewPostType) => {\r\n\t\tdispatch(actions.addPost(message.newPost));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={style.posts}>\r\n\t\t\t<h3>My posts</h3>\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<NewPostForm onSubmit={addPost} />\r\n\t\t\t\t</div>\r\n\t\t\t\t{postsResult}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nconst MyPostsMemo = React.memo(MyPosts);\r\nexport default MyPostsMemo;\r\n","import React, { ChangeEvent, FC, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateStatus } from \"../../../redux/Reducers/ProfileReducer\";\r\nimport style from \"./ProfileStatus.module.css\";\r\n\r\ntype PropsType = {\r\n\tstatus: string;\r\n};\r\nconst ProfileStatusWithHooks: FC<PropsType> = ({ status }) => {\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst [currentStatus, setCurrentStatus] = useState<string>(status);\r\n\tconst dispatch = useDispatch();\r\n\tuseEffect(() => {\r\n\t\tsetCurrentStatus(status);\r\n\t}, [status]);\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true);\r\n\t};\r\n\tconst deActivateEditMode = () => {\r\n\t\tsetEditMode(false);\r\n\t\tdispatch(updateStatus(status));\r\n\t};\r\n\r\n\tconst onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetCurrentStatus(e.currentTarget.value);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!editMode && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<b>Статус : </b>\r\n\t\t\t\t\t<span onDoubleClick={activateEditMode}>{status || \"No status\"}</span>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{editMode && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\tclassName={style.input}\r\n\t\t\t\t\t\tonBlur={deActivateEditMode}\r\n\t\t\t\t\t\tonChange={onStatusChange}\r\n\t\t\t\t\t\tvalue={currentStatus}\r\n\t\t\t\t\t></input>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport userPhoto from \"./../../../img/user_default.png\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport { FC } from \"react\";\r\nimport { ProfileType } from \"../../../types/types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { savePhoto } from \"../../../redux/Reducers/ProfileReducer\";\r\nimport { ChangeEvent } from \"react\";\r\n\r\ntype Props = {\r\n\tprofile: ProfileType|null;\r\n\tisOwner: boolean;\r\n\tstatus: string;\r\n};\r\n\r\nconst ProfileInfo: FC<Props> = ({ profile, isOwner, status }) => {\r\n\tconst dispatch = useDispatch();\r\n\tif (!profile) {\r\n\t\treturn <Preloader />;\r\n\t}\r\n\tlet avatar = profile.photos.small;\r\n\tconst handlePhoto = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (e.target.files && e.target.files.length) {\r\n\t\t\tconsole.log(e.target.files[0]);\r\n\t\t\tdispatch(savePhoto(e.target.files[0]));\r\n\t\t}\r\n\t};\r\n\tconsole.log(isOwner);\r\n\treturn (\r\n\t\t<div className={style.profile}>\r\n\t\t\t<div>\r\n\t\t\t\t<p>{profile.fullName}</p>\r\n\t\t\t\t<img className={style.avatar} src={avatar ? avatar : userPhoto} alt=\"avatar\" />\r\n\t\t\t\t{isOwner && <input type={\"file\"} onChange={handlePhoto} />}\r\n\t\t\t\t<ProfileStatus status={status} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import { FC } from \"react\";\r\nimport { ProfileType } from \"../../types/types\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport style from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\ntype PropsType = {\r\n\tisOwner: boolean;\r\n\tstatus: string;\r\n\tprofile: ProfileType|null;\r\n};\r\n\r\nconst Profile: FC<PropsType> = ({ isOwner, profile, status }) => {\r\n\treturn (\r\n\t\t<div className={style.profile}>\r\n\t\t\t<ProfileInfo isOwner={isOwner} profile={profile} status={status} />\r\n\t\t\t<MyPosts />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../Hoc/WithAuthRedirect\";\r\nimport { getProfile, getStatus } from \"../../redux/Reducers/ProfileReducer\";\r\nimport { getAuthState, getProfileState } from \"../../redux/Selectors/Selectors\";\r\nimport Profile from \"./Profile\";\r\n\r\nconst ProfileContainer = () => {\r\n  const { id } = useParams();\r\n  const { userId } = useSelector(getAuthState);\r\n  const { profile, status } = useSelector(getProfileState);\r\n  const dispatch = useDispatch();\r\n  let isOwner = false; // решить эту проблему\r\n  const refreshProfile = () => {\r\n    if (typeof (id) === \"undefined\") {\r\n      return;\r\n    }\r\n\t\tconst curUserId = userId ?? +id;\r\n\t\tdispatch(getProfile(curUserId));\r\n\t\tdispatch(getStatus(curUserId));\r\n  };\r\n\tuseEffect(() => {\r\n\t\trefreshProfile();\r\n\t}, [id, userId]);\r\n\r\n\treturn <Profile isOwner={isOwner} profile={profile} status={status} />;\r\n};\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(withAuthRedirect)(ProfileContainer);"],"sourceRoot":""}