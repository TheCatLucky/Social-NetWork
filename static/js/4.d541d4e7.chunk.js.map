{"version":3,"sources":["Social/components/Common/FormsControlls/FormsControls.js","Social/components/Common/FormsControlls/FormControls.module.css","Social/components/Utils/Validators/Validators.js","Social/Hoc/WithAuthRedirect.jsx","Social/img/user_default.png","Social/components/Profile/MyPosts/MyPosts.module.css","Social/components/Profile/Profile.module.css","Social/components/Profile/ProfileInfo/ProfileInfo.module.css","Social/components/Profile/ProfileInfo/ProfileStatus.module.css","Social/components/Profile/MyPosts/Post/Post.module.css","Social/components/Profile/ProfileInfo/ProfileStatus.jsx","Social/components/Profile/ProfileInfo/ProfileInfo.jsx","Social/components/Profile/MyPosts/Post/Post.jsx","Social/components/Profile/MyPosts/PostForm/PostForm.jsx","Social/components/Profile/MyPosts/MyPosts.jsx","Social/components/Profile/MyPosts/MyPostsContainer.jsx","Social/components/Profile/Profile.jsx","Social/components/Profile/ProfileContainer.jsx"],"names":["FormControl","input","meta","props","hasError","touched","error","className","style","formControl","children","Textarea","Input","module","exports","required","value","maxLengthCreator","maxLength","length","withAuthRedirect","Component","RedirectComponent","this","isAuth","to","React","connect","state","auth","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","profile","Preloader","avatar","photos","small","fullName","src","userPhoto","alt","ProfileStatus","changeStatus","Post","item","message","img","messageText","itemInfo","name","age","buttonLike","onClick","id","console","log","removePost","buttonDelete","maxLength10","NewPostForm","reduxForm","form","onSubmitSuccess","res","dispatch","reset","onSubmit","handleSubmit","Field","component","validate","cols","rows","placeholder","messageArea","MyPosts","postsResult","postsData","map","post","index","nanoid","posts","addPost","newPost","MyPostsContainer","profilePage","newPostText","Profile","store","ProfileContainer","userId","match","params","getProfile","getStatus","compose","useMatch"],"mappings":"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","file":"static/js/4.d541d4e7.chunk.js","sourcesContent":["import React from 'react'\r\nimport style from \"./FormControls.module.css\"\r\n\r\nconst FormControl = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error\r\n  return (\r\n    <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n      {props.children}\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  return (\r\n    <FormControl {...props}><textarea {...props.input} {...props} /></FormControl>\r\n  )\r\n}\r\n\r\nexport const Input = (props) => {\r\n  return (\r\n    <FormControl {...props}><input {...props.input} {...props}></input></FormControl>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__11yvM\",\"error\":\"FormControls_error__1l01I\"};","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return (\r\n          <Navigate to={\"/login\"} />\r\n        )\r\n      }\r\n      return (\r\n        <Component {...this.props} />\r\n      )\r\n    }\r\n  }\r\n  let mapStateToPropsRedirect = (state) => {\r\n    return {\r\n      isAuth: state.auth.isAuth\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n  return ConnectedAuthRedirectComponent;\r\n}","export default __webpack_public_path__ + \"static/media/user_default.a6143582.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2aDEP\",\"messageArea\":\"MyPosts_messageArea__2Zdk0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2JdNt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__1TKkc\",\"avatar\":\"ProfileInfo_avatar__2c8DW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ProfileStatus_input__2W9ga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1-oqb\",\"img\":\"Post_img__3OKQk\",\"buttonLike\":\"Post_buttonLike__1Agex\",\"name\":\"Post_name__2AhXX\",\"message\":\"Post_message__1IUxc\",\"messageText\":\"Post_messageText__1yaEv\",\"itemInfo\":\"Post_itemInfo__2UU-Y\",\"buttonDelete\":\"Post_buttonDelete__2IVxj\"};","import React, { useEffect, useState } from 'react';\r\nimport style from './ProfileStatus.module.css';\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status])\r\n  \r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n  const deActivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n  return (\r\n    <>\r\n      {!editMode &&\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || \"No status\"}</span>\r\n      </div>}\r\n      {editMode &&\r\n        <div>\r\n          <input autoFocus className={style.input}\r\n            onBlur={deActivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          ></input>\r\n        </div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport userPhoto from \"./../../../img/user_default.png\";\r\nimport style from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  let avatar = props.profile.photos.small;\r\n\r\n  return (\r\n    <div className={style.profile}>\r\n      <div>\r\n        <p>{props.profile.fullName}</p>\r\n        <img className={style.avatar} src={avatar ? avatar : userPhoto} alt=\"avatar\" />\r\n        <ProfileStatus\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n          changeStatus={props.changeStatus}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  const removePost = (id) => {\r\n    console.log(id);\r\n    props.removePost(id) \r\n  }\r\n  return (\r\n    <div className={style.item}>\r\n      <div className={style.message}>\r\n        <img className={style.img} src=\"https://www.film.ru/sites/default/files/filefield_paths/maxresdefault_1_24.jpg\" alt=\"avatar\" />\r\n        <span className={style.messageText}>{props.message}</span>\r\n      </div>\r\n      <div className={style.itemInfo}>\r\n        <span className={style.name}>Name: {props.name} Age: {props.age}</span>\r\n        <span className={style.buttonLike} >Like</span>\r\n        <button onClick={() => removePost(props.id)} className={style.buttonDelete}>Удалить</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import { Field, reduxForm, reset } from 'redux-form';\r\nimport style from './../MyPosts.module.css';\r\nimport { required, maxLengthCreator } from './../../../Utils/Validators/Validators';\r\nimport { Textarea } from './../../../Common/FormsControlls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst NewPost = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field name={\"newPost\"} component={Textarea}\r\n        validate={[required, maxLength10]}\r\n        cols={50} rows={3}\r\n        placeholder={'Введите текст поста'} className={style.messageArea}\r\n      />\r\n      <div>\r\n        <button>Отправить пост</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst clear = (res, dispatch) => {\r\n  dispatch(reset('newPost'));\r\n}\r\nconst NewPostForm = reduxForm({\r\n  form: 'newPost',\r\n  onSubmitSuccess: clear\r\n})(NewPost)\r\n\r\nexport default NewPostForm","import { nanoid } from 'nanoid';\r\nimport React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport NewPostForm from './PostForm/PostForm';\r\n\r\nfunction genId() { //кастомная генерация id\r\n  let modelId = nanoid();\r\n  return modelId;\r\n}\r\n\r\nconst MyPosts = (props) => {\r\n  let postsResult = props.postsData.map((post, index) => {\r\n    return (\r\n      <Post key={genId()}\r\n        id={index}\r\n        message={post.message}\r\n        name={post.name}\r\n        age={post.age}\r\n        removePost={props.removePost}\r\n      />)\r\n  });\r\n\r\n  let addPost = (message) => {\r\n    props.addPost(message.newPost)\r\n  }\r\n\r\n  return (\r\n    <div className={style.posts}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <div>\r\n          <NewPostForm\r\n            onSubmit={addPost}\r\n          />\r\n        </div>\r\n        {postsResult}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPost, removePost } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n  removePost,\r\n  addPost\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport style from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={style.profile}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        changeStatus={props.changeStatus}\r\n      />\r\n      <MyPostsContainer\r\n        store={props.store}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useMatch } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from './../../Hoc/WithAuthRedirect';\r\nimport { changeStatus, getProfile, getStatus, updateStatus } from './../../redux/profileReducer';\r\nimport Profile from './Profile';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match?.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.userId;\r\n    }\r\n    this.props.getProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    userId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    status: state.profilePage.status\r\n  }\r\n}\r\n\r\nconst ProfileMatch = (props) => {\r\n  let match = useMatch(\"/profile/:userId/\");\r\n  return (\r\n    <ProfileContainer {...props} match={match} />\r\n  )\r\n}\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps, { getProfile, getStatus, updateStatus, changeStatus }\r\n  ),\r\nwithAuthRedirect\r\n)(ProfileMatch);"],"sourceRoot":""}