{"version":3,"sources":["Social/img/user_default.png","Social/components/Users/Users.module.css","Social/components/Users/Paginatior.tsx","Social/components/Users/User.tsx","Social/components/Users/UsersSearchForm.tsx","Social/components/Users/Users.tsx"],"names":["module","exports","Paginatior","pageSize","totalUsersCount","portionSize","currentPage","useState","portionNumber","setPortionNumber","pagesCount","Math","ceil","dispatch","useDispatch","pages","i","push","portionCount","leftPortionPageNumber","rightPortionPageNumber","className","style","pagesNumber","onClick","filter","p","map","classNames","selected","pageNumber","actions","setCurrentPage","handleChange","User","React","memo","user","followingProgress","useSelector","getUsersState","ava","to","id","img","src","photos","small","userPhoto","alt","followed","button","disabled","some","unfollow","follow","userInfo","name","userName","status","usersSearchFormValidate","values","UsersSearchForm","onFilterChanged","enableReinitialize","initialValues","term","friend","validate","onSubmit","setSubmitting","isSubmitting","type","as","value","Users","usersData","isFetching","navigate","useNavigate","useEffect","getUsers","content","Preloader","u"],"mappings":"sHAAe,QAA0B,0C,oBCCzCA,EAAOC,QAAU,CAAC,IAAM,mBAAmB,IAAM,mBAAmB,OAAS,sBAAsB,KAAO,oBAAoB,QAAU,uBAAuB,SAAW,wBAAwB,KAAO,oBAAoB,SAAW,wBAAwB,SAAW,wBAAwB,YAAc,2BAA2B,WAAa,4B,sJCkD1UC,EAtCmB,SAAC,GAKlC,IAL+F,IAA3DC,EAA0D,EAA1DA,SAAUC,EAAgD,EAAhDA,gBAAiBC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAC5E,EAA0CC,mBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACIC,EAAaC,KAAKC,KAAKR,EAAkBD,GACvCU,EAAWC,cACbC,EAAuB,GAClBC,EAAI,EAAGA,GAAKN,EAAYM,IAChCD,EAAME,KAAKD,GAEZ,IAAIE,EAAeP,KAAKC,KAAKF,EAAaL,GACtCc,GAAyBX,EAAgB,GAAKH,EAAc,EAC5De,EAAyBZ,EAAgBH,EAI7C,OACC,sBAAKgB,UAAWC,IAAMC,YAAtB,UACEf,EAAgB,GAAK,wBAAQgB,QAAS,kBAAMf,EAAiBD,EAAgB,IAAxD,kBACrBO,EACCU,QAAO,SAACC,GAAD,OAAOA,GAAKP,GAAyBO,GAAKN,KACjDO,KAAI,SAACD,GACL,OACC,sBAECL,UAAWO,IAAWtB,IAAgBoB,GAAKJ,IAAMO,SAAUP,IAAMQ,YACjEN,QAAS,YAbM,SAACE,GACrBb,EAASkB,IAAQC,eAAeN,IAa1BO,CAAaP,IAJf,SAOEA,GANIA,MAURR,EAAeV,GACf,wBAAQgB,QAAS,kBAAMf,EAAiBD,EAAgB,IAAxD,sB,iBCqBW0B,EAtDaC,IAAMC,MAAK,YAAa,IAAXC,EAAU,EAAVA,KAClCxB,EAAWC,cAOTwB,EAAsBC,YAAYC,KAAlCF,kBACR,OACC,sBAAKjB,UAAWC,IAAMe,KAAtB,UACC,sBAAKhB,UAAWC,IAAMmB,IAAtB,UACC,cAAC,IAAD,CAASC,GAAI,YAAcL,EAAKM,GAAhC,SACC,qBACCtB,UAAWC,IAAMsB,IACjBC,IACsB,MAArBR,EAAKS,OAAOC,MACTV,EAAKS,OAAOC,MACZC,IAEJC,IAAI,aAGLZ,EAAKa,SACL,wBACC7B,UAAWC,IAAM6B,OACjBC,SAAUd,EAAkBe,MAAK,SAACV,GAAD,OAAQA,IAAON,EAAKM,MACrDnB,QAAS,WAtBS,IAACmB,IAuBHN,EAAKM,GAtBzB9B,EAASyC,YAASX,KAkBf,sBAUA,wBACCtB,UAAWC,IAAM6B,OACjBC,SAAUd,EAAkBe,MAAK,SAACV,GAAD,OAAQA,IAAON,EAAKM,MACrDnB,QAAS,WAnCO,IAACmB,IAoCHN,EAAKM,GAnCvB9B,EAAS0C,YAAOZ,KA+Bb,uBAWF,qBAAKtB,UAAWC,IAAMkC,SAAtB,SACC,sBAAKnC,UAAWC,IAAMmC,KAAtB,UACC,gCAAMpB,EAAKoB,KAAX,OACA,qBAAKpC,UAAWC,IAAMoC,SAAtB,SAAiCrB,EAAKsB,oB,SCzDrCC,EAA0B,SAACC,GAEhC,MADe,IAWHC,EAA6B3B,IAAMC,MAAK,YAA0B,IAAvB2B,EAAsB,EAAtBA,gBAUvD,OACC,cAAC,IAAD,CACCC,oBAAkB,EAClBC,cAAe,CAAEC,KAAM,GAAIC,OAAQ,QACnCC,SAAUR,EACVS,SAda,SAACR,EAAD,GAA8F,IAAzES,EAAwE,EAAxEA,cAC7B7C,EAAqB,CAC1ByC,KAAML,EAAOK,KACbC,OAA0B,SAAlBN,EAAOM,OAAoB,KAAyB,SAAlBN,EAAOM,QAElDJ,EAAgBtC,GAChB6C,GAAc,IAId,SAME,gBAAGC,EAAH,EAAGA,aAAH,OACA,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,KAAK,OAAOf,KAAK,SACxB,eAAC,IAAD,CAAOA,KAAK,SAASgB,GAAG,SAAxB,UACC,wBAAQC,MAAM,OAAd,iBACA,wBAAQA,MAAM,OAAd,sBACA,wBAAQA,MAAM,QAAd,2BAED,wBAAQF,KAAK,SAASpB,SAAUmB,EAAhC,2BC9BCI,EAAYxC,IAAMC,MAAK,WAC3B,MAAkFG,YAAYC,KAAtFpC,EAAR,EAAQA,gBAAiBD,EAAzB,EAAyBA,SAAUG,EAAnC,EAAmCA,YAAasE,EAAhD,EAAgDA,UAAWC,EAA3D,EAA2DA,WAAYpD,EAAvE,EAAuEA,OACjEZ,EAAWC,cACZgE,EAAWC,cACjBC,qBAAU,WACTnE,EAASoE,YAAS3E,EAAaH,EAAUsB,MACvC,CAACnB,IAEH0E,qBAAU,WACVF,EAAS,eAAD,OAAgBrD,EAAOyC,KAAvB,mBAAsCzC,EAAO0C,OAA7C,iBAA4D7D,MACjE,CAACmB,EAAQnB,IAIb,OACC,sBAAKe,UAAWC,IAAM4D,QAAtB,UACEL,EAAa,cAACM,EAAA,EAAD,IAAgB,KAC9B,cAACrB,EAAD,CAAiBC,gBANK,SAACtC,GACxBZ,EAASoE,YAAS,EAAG9E,EAAUsB,OAM9B,cAAC,EAAD,CACCrB,gBAAiBA,EACjBD,SAAUA,EACVG,YAAaA,EACbD,YAAa,KAEbuE,EAAUjD,KAAI,SAACyD,GAAD,OACd,cAAC,EAAD,CAAM/C,KAAM+C,GAAQA,EAAEzC,aAKXgC","file":"static/js/8.736ca09c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user_default.a6143582.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Users_img__2iXmX\",\"ava\":\"Users_ava__348my\",\"button\":\"Users_button__2IeHC\",\"user\":\"Users_user__3yQyo\",\"content\":\"Users_content__13IZM\",\"userInfo\":\"Users_userInfo__T3yNp\",\"name\":\"Users_name__1rXLe\",\"userName\":\"Users_userName__1mHvV\",\"selected\":\"Users_selected__2Mk6F\",\"pagesNumber\":\"Users_pagesNumber__2soYk\",\"pageNumber\":\"Users_pageNumber__2nv0Z\"};","import classNames from \"classnames\";\r\nimport { FC, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport style from \"./Users.module.css\";\r\nimport { actions } from \"../../redux/Reducers/UsersReducer\";\r\n\r\ntype PropsType = {\r\n\ttotalUsersCount: number;\r\n\tpageSize: number;\r\n\tportionSize: number;\r\n\tcurrentPage: number;\r\n};\r\n\r\nconst Paginatior: FC<PropsType> = ({ pageSize, totalUsersCount, portionSize, currentPage }) => {\r\n\tconst [portionNumber, setPortionNumber] = useState(1);\r\n\tlet pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\tconst dispatch = useDispatch();\r\n\tlet pages: Array<number> = [];\r\n\tfor (let i = 1; i <= pagesCount; i++) {\r\n\t\tpages.push(i);\r\n\t}\r\n\tlet portionCount = Math.ceil(pagesCount / portionSize);\r\n\tlet leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n\tlet rightPortionPageNumber = portionNumber * portionSize;\r\n\tconst handleChange = (p: number) => {\r\n\t\tdispatch(actions.setCurrentPage(p));\r\n\t};\r\n\treturn (\r\n\t\t<div className={style.pagesNumber}>\r\n\t\t\t{portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber - 1)}>Prev</button>}\r\n\t\t\t{pages\r\n\t\t\t\t.filter((p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n\t\t\t\t.map((p) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tkey={p}\r\n\t\t\t\t\t\t\tclassName={classNames(currentPage === p && style.selected, style.pageNumber)}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\thandleChange(p);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{p}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t{portionCount > portionNumber && (\r\n\t\t\t\t<button onClick={() => setPortionNumber(portionNumber + 1)}>Next</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Paginatior;\r\n","import React, { FC } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport userPhoto from \"../../img/user_default.png\";\r\nimport { follow, unfollow } from \"../../redux/Reducers/UsersReducer\";\r\nimport { getUsersState } from \"../../redux/Selectors/Selectors\";\r\nimport { UserType } from \"../../types/types\";\r\nimport style from \"./Users.module.css\";\r\n\r\ntype PropsType = {\r\n\tuser: UserType;\r\n};\r\n\r\nconst User: FC<PropsType> = React.memo(({user}) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst handleFollow = (id: number) => {\r\n\t\tdispatch(follow(id));\r\n\t};\r\n\tconst handleUnFollow = (id: number) => {\r\n\t\tdispatch(unfollow(id));\r\n\t};\r\n\tconst { followingProgress } = useSelector(getUsersState);\r\n\treturn (\r\n\t\t<div className={style.user}>\r\n\t\t\t<div className={style.ava}>\r\n\t\t\t\t<NavLink to={\"/profile/\" + user.id}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName={style.img}\r\n\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\tuser.photos.small != null\r\n\t\t\t\t\t\t\t\t? user.photos.small\r\n\t\t\t\t\t\t\t\t: userPhoto\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\talt=\"avatar\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t{user.followed ? (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={style.button}\r\n\t\t\t\t\t\tdisabled={followingProgress.some((id) => id === user.id)}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\thandleUnFollow(user.id);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tUnfollow\r\n\t\t\t\t\t</button>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={style.button}\r\n\t\t\t\t\t\tdisabled={followingProgress.some((id) => id === user.id)}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\thandleFollow(user.id);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tFollow\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className={style.userInfo}>\r\n\t\t\t\t<div className={style.name}>\r\n\t\t\t\t\t<div>{user.name} </div>\r\n\t\t\t\t\t<div className={style.userName}>{user.status}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n});\r\nexport default User;\r\n","import { Field, Form, Formik } from \"formik\";\r\nimport React, { FC } from \"react\";\r\nimport { FilterType } from \"../../redux/Reducers/UsersReducer\";\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n\tconst errors = {};\r\n\treturn errors;\r\n};\r\ntype Props = {\r\n\tonFilterChanged: (filter: FilterType) => void;\r\n};\r\ntype FriendForm = \"true\" | \"false\" | \"null\";\r\ntype FormType = {\r\n  term: string,\r\n  friend: \"true\" | \"false\" | \"null\"\r\n}\r\nexport const UsersSearchForm: FC<Props> = React.memo(({ onFilterChanged }) => {\r\n\tconst submit = (values: FormType, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n\t\tconst filter: FilterType = {\r\n\t\t\tterm: values.term,\r\n\t\t\tfriend: values.friend === \"null\" ? null : values.friend === \"true\" ? true : false,\r\n\t\t};\r\n\t\tonFilterChanged(filter);\r\n\t\tsetSubmitting(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tenableReinitialize\r\n\t\t\tinitialValues={{ term: \"\", friend: \"null\" as FriendForm }}\r\n\t\t\tvalidate={usersSearchFormValidate}\r\n\t\t\tonSubmit={submit}\r\n\t\t>\r\n\t\t\t{({ isSubmitting }) => (\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<Field type=\"text\" name=\"term\" />\r\n\t\t\t\t\t<Field name=\"friend\" as=\"select\">\r\n\t\t\t\t\t\t<option value=\"null\">All</option>\r\n\t\t\t\t\t\t<option value=\"true\">Followed</option>\r\n\t\t\t\t\t\t<option value=\"false\">Unfollowed</option>\r\n\t\t\t\t\t</Field>\r\n\t\t\t\t\t<button type=\"submit\" disabled={isSubmitting}>\r\n\t\t\t\t\t\tFind\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n});\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FilterType, getUsers } from \"../../redux/Reducers/UsersReducer\";\r\nimport { getUsersState } from \"../../redux/Selectors/Selectors\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport Paginatior from \"./Paginatior\";\r\nimport User from \"./User\";\r\nimport style from \"./Users.module.css\";\r\nimport { UsersSearchForm } from \"./UsersSearchForm\";\r\n\r\nconst Users: FC = React.memo(() => {\r\n  const { totalUsersCount, pageSize, currentPage, usersData, isFetching, filter } = useSelector(getUsersState);\r\n  const dispatch = useDispatch();\r\n\tconst navigate = useNavigate();\r\n\tuseEffect(() => {\r\n\t\tdispatch(getUsers(currentPage, pageSize, filter));\r\n\t}, [currentPage]);\r\n\r\n  useEffect(() => {\r\n\t\tnavigate(`/users?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`);\r\n  }, [filter, currentPage]);\r\n\tconst onFilterChanged = (filter: FilterType) => {\r\n\t\tdispatch(getUsers(1, pageSize, filter));\r\n\t};\r\n\treturn (\r\n\t\t<div className={style.content}>\r\n\t\t\t{isFetching ? <Preloader /> : null}\r\n\t\t\t<UsersSearchForm onFilterChanged={onFilterChanged} />\r\n\t\t\t<Paginatior\r\n\t\t\t\ttotalUsersCount={totalUsersCount}\r\n\t\t\t\tpageSize={pageSize}\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\tportionSize={10}\r\n\t\t\t/>\r\n\t\t\t{usersData.map((u) => (\r\n\t\t\t\t<User user={u} key={u.id} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n});\r\nexport default Users;\r\n"],"sourceRoot":""}