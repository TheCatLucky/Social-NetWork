{"version":3,"sources":["Social/components/Common/FormsControlls/FormsControls.js","Social/components/Common/FormsControlls/FormControls.module.css","Social/components/Utils/Validators/Validators.js","Social/components/Dialogs/Dialogs.module.css","Social/Hoc/WithAuthRedirect.jsx","Social/components/Dialogs/DialogItem/DialogItem.jsx","Social/components/Dialogs/Message/Message.jsx","Social/components/Dialogs/MessageForm/MessageForm.jsx","Social/components/Dialogs/Dialogs.jsx","Social/components/Dialogs/DialogsContainer.jsx"],"names":["FormControl","input","meta","props","hasError","touched","error","className","style","formControl","children","Textarea","Input","module","exports","required","value","maxLengthCreator","maxLength","length","withAuthRedirect","Component","RedirectComponent","this","isAuth","to","React","connect","state","auth","DialogItem","path","id","item","isActive","active","name","Message","messageItem","message","MessageForm","reduxForm","form","onSubmitSuccess","res","dispatch","reset","onSubmit","handleSubmit","Field","component","validate","cols","rows","placeholder","messageArea","genId","nanoid","Dialogs","dialogsPage","dialogResult","dialogsData","map","messagesResult","messagesData","page","dialogs","messages","messageData","sendMessage","dialogNewMessage","DialogsContainer","compose"],"mappings":"iQAGMA,EAAc,SAAC,GAA8B,EAA5BC,MAA6B,IAAtBC,EAAqB,EAArBA,KAASC,EAAY,iBAC3CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACE,sBAAKC,UAAWC,IAAMC,YAAc,KAAOL,EAAWI,IAAMF,MAAQ,IAApE,UACGH,EAAMO,SACNN,GAAY,+BAAOF,EAAKI,YAKlBK,EAAW,SAACR,GACvB,OACE,cAACH,EAAD,2BAAiBG,GAAjB,aAAwB,oDAAcA,EAAMF,OAAWE,QAI9CS,EAAQ,SAACT,GACpB,OACE,cAACH,EAAD,2BAAiBG,GAAjB,aAAwB,iDAAWA,EAAMF,OAAWE,S,oBCpBxDU,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,iCCD1E,oEAAO,IAAMC,EAAW,SAACC,GACvB,IAAIA,EACJ,MAAO,qBAGIC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC9C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCLhCL,EAAOC,QAAU,CAAC,KAAO,sBAAsB,QAAU,yBAAyB,KAAO,sBAAsB,OAAS,wBAAwB,SAAW,0BAA0B,YAAc,6BAA6B,YAAc,+B,oJCGjOM,EAAmB,SAACC,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAKpB,MAAMqB,OAMd,cAACH,EAAD,eAAeE,KAAKpB,QAJlB,cAAC,IAAD,CAAUsB,GAAI,eALuB,GACbC,IAAML,WAkBtC,OADqCM,aALP,SAACC,GAC7B,MAAO,CACLJ,OAAQI,EAAMC,KAAKL,UAGcG,CAAiCL,K,6HCVzDQ,EATI,SAAC3B,GAClB,IAAI4B,EAAO,YAAc5B,EAAM6B,GAC/B,OACE,qBAAKzB,UAAWC,IAAMyB,KAAtB,SACE,cAAC,IAAD,CAASR,GAAIM,EAAMxB,UAAW,qBAAG2B,SAAuB,UAAM1B,IAAM2B,QAAW,IAA/E,SAAoFhC,EAAMiC,UCCjFC,EANC,SAAClC,GACf,OACE,qBAAKI,UAAWC,IAAM8B,YAAtB,SAAoCnC,EAAMoC,W,4CCCxCrB,EAAYD,YAAiB,IAuBpBuB,EALKC,YAAU,CAC5BC,KAAM,mBACNC,gBALY,SAACC,EAAKC,GAClBA,EAASC,YAAM,uBAEGL,EAjBF,SAACtC,GACjB,OACE,uBAAM4C,SAAU5C,EAAM6C,aAAtB,UACE,cAACC,EAAA,EAAD,CAAOb,KAAM,mBAAoBc,UAAWvC,IAC1CwC,SAAU,CAACpC,IAAUG,GACrBkC,KAAM,GAAIC,KAAM,EAChBC,YAAa,oGAAqB/C,UAAWC,IAAM+C,cAErD,8BACE,2JCRR,SAASC,IAEP,OADcC,cAIhB,IA4BeC,EA5BC,SAACvD,GAEf,IAAIyB,EAAQzB,EAAMwD,YAEdC,EAAehC,EAAMiC,YAAYC,KAAI,SAAC9B,GACxC,OAAO,cAAC,EAAD,CAA0BA,GAAIA,EAAGA,GAAII,KAAMJ,EAAGI,MAA7BoB,QAEtBO,EAAiBnC,EAAMoC,aAAaF,KAAI,SAAC9B,GAC3C,OAAO,cAAC,EAAD,CAAuBA,GAAIA,EAAGA,GAAIO,QAASP,EAAGO,SAAhCiB,QAOvB,OACE,sBAAKjD,UAAWC,IAAMyD,KAAtB,UACE,sBAAK1D,UAAWC,IAAM0D,QAAtB,4CACGN,KAEH,sBAAKrD,UAAWC,IAAM2D,SAAtB,mEACGJ,EACD,cAAC,EAAD,CAAahB,SAXM,SAACqB,GACxBjE,EAAMkE,YAAYD,EAAYE,4BCX5BC,EAAmBC,kBACvB7C,aARoB,SAACC,GACrB,MAAO,CACL+B,YAAa/B,EAAM+B,eAMI,CACvBU,kBAEFjD,IAJuBoD,CAKvBd,GAEaa","file":"static/js/5.fb988911.chunk.js","sourcesContent":["import React from 'react'\r\nimport style from \"./FormControls.module.css\"\r\n\r\nconst FormControl = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error\r\n  return (\r\n    <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n      {props.children}\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  return (\r\n    <FormControl {...props}><textarea {...props.input} {...props} /></FormControl>\r\n  )\r\n}\r\n\r\nexport const Input = (props) => {\r\n  return (\r\n    <FormControl {...props}><input {...props.input} {...props}></input></FormControl>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__11yvM\",\"error\":\"FormControls_error__1l01I\"};","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Dialogs_page__XNWGu\",\"dialogs\":\"Dialogs_dialogs__2oePs\",\"item\":\"Dialogs_item__1lQ19\",\"active\":\"Dialogs_active__2yb0P\",\"messages\":\"Dialogs_messages__1rwNu\",\"messageItem\":\"Dialogs_messageItem__rJM4z\",\"messageArea\":\"Dialogs_messageArea__3oo4o\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return (\r\n          <Navigate to={\"/login\"} />\r\n        )\r\n      }\r\n      return (\r\n        <Component {...this.props} />\r\n      )\r\n    }\r\n  }\r\n  let mapStateToPropsRedirect = (state) => {\r\n    return {\r\n      isAuth: state.auth.isAuth\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n  return ConnectedAuthRedirectComponent;\r\n}","import { NavLink } from 'react-router-dom';\r\nimport style from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={style.item} >\r\n      <NavLink to={path} className={({ isActive }) => isActive ? `${style.active}` : \"\"}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import style from \"./../Dialogs.module.css\"\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={style.messageItem}>{props.message}</div>\r\n  )\r\n}\r\n\r\nexport default Message;","import { Field, reduxForm } from 'redux-form';\r\nimport { reset } from 'redux-form';\r\nimport style from './../Dialogs.module.css';\r\nimport { Textarea } from './../../Common/FormsControlls/FormsControls';\r\nimport { required, maxLengthCreator} from './../../Utils/Validators/Validators';\r\nconst maxLength = maxLengthCreator(50);\r\nconst NewMessge = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field name={\"dialogNewMessage\"} component={Textarea}\r\n        validate={[required, maxLength]}\r\n        cols={30} rows={3} \r\n        placeholder={'Введите сообщение'} className={style.messageArea}\r\n      />\r\n      <div>\r\n        <button>Отправить сообщение</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst clear = (res, dispatch) => {\r\n  dispatch(reset('dialogNewMessage'));\r\n}\r\nconst MessageForm = reduxForm({\r\n  form: 'dialogNewMessage',\r\n  onSubmitSuccess: clear\r\n})(NewMessge)\r\n\r\nexport default MessageForm","import { nanoid } from 'nanoid';\r\nimport React from 'react';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport style from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport MessageForm from './MessageForm/MessageForm';\r\n\r\nfunction genId() { //кастомная генерация id\r\n  let modelId = nanoid();\r\n  return modelId;\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogResult = state.dialogsData.map((id) => {\r\n    return <DialogItem key={genId()} id={id.id} name={id.name} />\r\n  })\r\n  let messagesResult = state.messagesData.map((id) => {\r\n    return <Message key={genId()} id={id.id} message={id.message} />\r\n  })\r\n\r\n  let onSendMessageClick = (messageData) => {\r\n    props.sendMessage(messageData.dialogNewMessage);\r\n  }\r\n\r\n  return (\r\n    <div className={style.page}>\r\n      <div className={style.dialogs}> Имена\r\n        {dialogResult}\r\n      </div>\r\n      <div className={style.messages}>Сообщения\r\n        {messagesResult}\r\n        <MessageForm onSubmit={onSendMessageClick} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { sendMessage } from \"../../redux/dialogsReducer\";\r\nimport { withAuthRedirect } from './../../Hoc/WithAuthRedirect';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\n\r\nconst DialogsContainer = compose(\r\n  connect(mapStateToProps, {\r\n    sendMessage\r\n  }),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}